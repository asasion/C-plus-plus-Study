#include<iostream>
using namespace std;
#include<string>
//类做友元
class Building;//事先声明有一个Building类
class GoodGuy
{
public:
	GoodGuy();
	void visit();//让 参观函数 访问Building中的公共和私有属性
	Building * m_building;//在GoodGuy类中创建一个指向Building类的指针
};
class Building
{
public:
	Building();//构造函数，在类外定义成员函数
public:
	string m_SittingRoom;//客厅
private:
	string m_BedRoom;//卧室
};
//类外写成员函数
Building::Building()//申明Building属于Building类
{
	//对Building类内的属性赋初值
	m_SittingRoom = "客厅";
	m_BedRoom = "卧室";
}
GoodGuy::GoodGuy()//同样的类外实现
{
	//创建一个建筑物的对象
	m_building = new Building;//为什么要用new创建
}
void GoodGuy::visit()//参观函数的类外实现
{
	cout << "好哥们类（GoodGuy）正在访问" << m_building->m_SittingRoom << endl;
}
void test134201()
{
	GoodGuy gg;
	gg.visit();
}
int main()
{
	test134201();
	system("pause");
	return 0;
}