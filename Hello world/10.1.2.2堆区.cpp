#include<iostream>
using namespace std;
/*
​ 堆区：
​ 由程序员分配释放,若程序员不释放,程序结束时由操作系统回收
​ 在C++中主要利用new在堆区开辟内存
在程序运行期间不会释放
*/
/*
为什么要用new关键字去创建变量，
因为在函数中的数据是局部变量，程序运行后它将被存放在栈区，栈区的数据在函数执行完成后就会被销毁，此时就找不到栈区中创建的变量。
*/
int* func10122()
{
	//利用new关键字，可以将数据开辟到堆区
	//指针的本质是一个局部变量，放在栈上，指针保存的数据放在堆区
	//所以指针放在栈区，程序员创建的数据放在堆区
	int* p = new int(10);//用指针去接收开辟出的新内存
	return p;
}
int main10122()
{
	//在堆区开辟数据
	int* p = func10122();//此时func函数内的指针p已经被释放掉了，而它所指向的地址被传递给了main函数中的*p
	cout << *p << endl;
	cout << *p << endl;
	cout << *p << endl;
	cout << *p << endl;
	cout << *p << endl;
	system("pause");
	return 0;
}
/*
总结：
堆区数据由程序员管理开辟和释放
堆区数据利用new关键字进行内存开辟
*/